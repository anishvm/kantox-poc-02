name: Docker Image CI
on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  IMAGE_REPO: ansih/kantox-poc
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: get tag value
      id: taggerdyrun
      uses: anothrNick/github-tag-action@1.67.0
      env:
        WITH_V: true
        DRY_RUN: true
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./hello-world
        push: true
        tags: ${{ env.IMAGE_REPO }}:${{ steps.taggerdyrun.outputs.new_tag }}
    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
    - name: Update helm values and charts
      id: update
      run: |
        pwd
        sed -i 's+tag:.*+tag: "${{ steps.taggerdyrun.outputs.new_tag }}"+g' charts/values.yaml
        sed -i 's+appVersion:.*+appVersion: "${{ steps.taggerdyrun.outputs.new_tag }}"+g' charts/Chart.yaml
        echo "version=$(${{steps.taggerdyrun.outputs.new_tag//v}})"
        echo "$version"
        sed -i 's+version:.*+version: "$version"+g' charts/Chart.yaml
        git add .
        git diff
        git commit -m 'Done  by Github Actions   Job changemanifest: ${{ github.run_number }}'
        git push
      env:
        RUN_NUMBER: ${{ github.run_number }}
    - name: Update tag in git
      id: tagger
      uses: anothrNick/github-tag-action@1.67.0
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
        WITH_V: true
    - name: Install Helm
      uses: azure/setup-helm@v3
    - name: Run chart-releaser
      uses: helm/chart-releaser-action@v1.6.0
      with:
        charts_dir: charts
        packages_with_index: true
        pages_branch: gh-pages
        mark_as_latest: true
      env:
        CR_TOKEN: "${{ secrets.PAT }}"
